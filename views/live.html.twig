{% extends "base.html.twig" %}

{% block title %}{{ title }} â€” {{ parent() }}{% endblock %}
{% set frequency = 5 %}
{% block content %}
    {% include '_server_menu.html.twig' with { title: title, server_name: server_name, hostname: hostname, hosts: hosts } %}
    <div class="pull-right live-controls">
        <a href="#" title="Play" class="icon-play disabled"></a>
        <a href="#" title="Pause" class="icon-pause"></a>
        <button class="btn btn-mini filter" type="button">Filter</button>
    </div>
    <p class="lead" style="display: {{ show_filter ? 'none' : 'block' }};">
        <span>
            The page is refreshed every {{ frequency }} seconds
        </span>
    </p>
    <div class="filter-form" style="display: {{ show_filter ? 'block' : 'none' }};">
        <form id="filter-form">
            <div class="controls">
                <div class="input-prepend">
                    <span class="add-on"><i class="icon-tag"></i></span>
                    <input name="tags" class="span4" type="text" value="{{ filter.tags is defined ? filter.tags : '' }}" placeholder="Tag value (tag_name=tag_value)">
                </div>
                <div class="input-prepend">
                    <span class="add-on"><i class="icon-time"></i></span>
                    <input name="req_time" class="span4" type="text" value="{{ filter.req_time is defined ? filter.req_time : '' }}" placeholder="Min request time, ms">
                </div>
            </div>
            <input type="hidden" name="last_id" />
            <input type="hidden" name="last_timestamp" />
        </form>
    </div>
    <div class="row-fluid">
        <div class="span4">
            <h3>Request time</h3>
            <div id="req-time-chart" style="height: 200px;"></div>
            <script type="text/javascript">
                rtChart = null;
                rtChartData = [];
                {% for item in pages|reverse %}
                rtChartData.push({ page: "{{ item.script_name }}", value: "{{ item.req_time }}" });
                {% endfor %}

                AmCharts.ready(function () {
                    // SERIAL CHART
                    rtChart = new AmCharts.AmSerialChart();
                    rtChart.pathToImages = "{{ base_url }}js/amcharts/images/";
                    rtChart.dataProvider = rtChartData;
                    rtChart.categoryField = "page";

                    var categoryAxis = rtChart.categoryAxis;
                    categoryAxis.gridAlpha = 0.07;
                    categoryAxis.axisColor = "#DADADA";
                    categoryAxis.labelsEnabled = false;

                    // Value
                    var valueAxis = new AmCharts.ValueAxis();
                    valueAxis.gridAlpha = 0.07;
                    rtChart.addValueAxis(valueAxis);

                    // GRAPH
                    var graph = new AmCharts.AmGraph();
                    graph.type = "line"; // try to change it to "column"
                    graph.title = "Request time";
                    graph.balloonText = "[[value]] ms";
                    graph.valueField = "value";
                    graph.descriptionField = "page";
                    graph.lineAlpha = 1;
                    graph.lineColor = "#729462";
                    graph.fillAlphas = 0.2;
                    graph.fillColor = "#729462";
                    rtChart.addGraph(graph);

                    // CURSOR
                    var chartCursor = new AmCharts.ChartCursor();
                    chartCursor.cursorPosition = "mouse";
                    rtChart.addChartCursor(chartCursor);

                    // WRITE
                    rtChart.write("req-time-chart");
                });
            </script>
        </div>
        <div class="span4">
            <h3>Memory peak usage</h3>
            <div id="mem-usage-chart" style="height: 200px;"></div>
            <script type="text/javascript">
                muChart = null;
                muChartData = [];
                {% for item in pages|reverse %}
                muChartData.push({ page: "{{ item.script_name }}", value: "{{ item.mem_peak_usage }}" });
                {% endfor %}

                AmCharts.ready(function () {
                    // SERIAL CHART
                    muChart = new AmCharts.AmSerialChart();
                    muChart.pathToImages = "{{ base_url }}js/amcharts/images/";
                    muChart.dataProvider = muChartData;
                    muChart.categoryField = "page";

                    var categoryAxis = muChart.categoryAxis;
                    categoryAxis.gridAlpha = 0.07;
                    categoryAxis.axisColor = "#DADADA";
                    categoryAxis.labelsEnabled = false;

                    // Value
                    var valueAxis = new AmCharts.ValueAxis();
                    valueAxis.gridAlpha = 0.07;
                    muChart.addValueAxis(valueAxis);

                    // GRAPH
                    var graph = new AmCharts.AmGraph();
                    graph.type = "line"; // try to change it to "column"
                    graph.title = "Memory peak usage";
                    graph.balloonText = "[[value]] kB";
                    graph.valueField = "value";
                    graph.descriptionField = "page";
                    graph.lineAlpha = 1;
                    graph.lineColor = "#39A3B9";
                    graph.fillAlphas = 0.2;
                    muChart.addGraph(graph);

                    // CURSOR
                    var chartCursor = new AmCharts.ChartCursor();
                    chartCursor.cursorPosition = "mouse";
                    muChart.addChartCursor(chartCursor);

                    // WRITE
                    muChart.write("mem-usage-chart");
                });
            </script>
        </div>
        <div class="span4">
            <h3>CPU peak usage</h3>
            <div id="cpu-usage-chart" style="height: 200px;"></div>
            <script type="text/javascript">
                cpuChart = null;
                cpuChartData = [];
                {% for item in pages|reverse %}
                cpuChartData.push({ page: "{{ item.script_name }}", value: "{{ item.ru_utime }}" });
                {% endfor %}

                AmCharts.ready(function () {
                    // SERIAL CHART
                    cpuChart = new AmCharts.AmSerialChart();
                    cpuChart.pathToImages = "{{ base_url }}js/amcharts/images/";
                    cpuChart.dataProvider = cpuChartData;
                    cpuChart.categoryField = "page";

                    var categoryAxis = cpuChart.categoryAxis;
                    categoryAxis.gridAlpha = 0.07;
                    categoryAxis.axisColor = "#DADADA";
                    categoryAxis.labelsEnabled = false;

                    // Value
                    var valueAxis = new AmCharts.ValueAxis();
                    valueAxis.gridAlpha = 0.07;
                    cpuChart.addValueAxis(valueAxis);

                    // GRAPH
                    var graph = new AmCharts.AmGraph();
                    graph.type = "line"; // try to change it to "column"
                    graph.title = "CPU usage";
                    graph.balloonText = "[[value]]";
                    graph.valueField = "value";
                    graph.descriptionField = "page";
                    graph.lineAlpha = 1;
                    graph.lineColor = "#b93939";
                    graph.fillAlphas = 0.2;
                    cpuChart.addGraph(graph);

                    // CURSOR
                    var chartCursor = new AmCharts.ChartCursor();
                    chartCursor.cursorPosition = "mouse";
                    cpuChart.addChartCursor(chartCursor);

                    // WRITE
                    cpuChart.write("cpu-usage-chart");
                });
            </script>
        </div>
    </div>
    <div class="row-fluid">
      <div class="span12">
          <h3>Last requests</h3>
          <table id="table-data" class="table table-bordered table-hover table-striped">
            <tr id="table-header">
              <th>Host name</th>
              <th>Script name</th>
              <th><div class="text-right">Request time, ms</div></th>
              <th><div class="text-right">Status</div></th>
              <th><div class="text-right">Memory usage, kB</div></th>
              <th><div class="text-right">CPU usage</div></th>
              <th><div class="text-right">Time</div></th>
            </tr>
            {% for page in pages %}
            <tr>
              <td class="host">{{ page.hostname }}</a></td>
              <td class="script-name">
                <a class="script-name" href="http://{{ page.server_name ~ page.script_name }}" title="{{ page.script_name }}">{{ page.script_name }}</a>
                {% for k, v in page.tags %}
                    <div class="muted"><small>{{ k }} = {{ v }}</small></div>
                {% endfor %}
                {% if page.timers_cnt %}
                    <div>
                        <a href="{{ path('timers_show', { type: 'live', requestId: page.id }) }}"><small><i class="icon-time"></i> timers details</small></a>
                    </div>
                {% endif %}
              </td>
              <td><div class="text-right">{{ page.req_time_format }}</div></td>
              <td><div class="text-right">{{ page.status }}</div></td>
              <td><div class="text-right">{{ page.mem_peak_usage_format }}</div></td>
              <td><div class="text-right">{{ page.ru_utime }}</div></td>
              <td><div class="text-right">-</div></td>
            </tr>
            {% endfor %}
          </table>
      </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script type="text/html" id="row_tpl">
        <% for (var i = 0; i < pages.length; i++) { %>
        <tr style="display: none;">
          <td class="host"><%=pages[i].hostname%></a></td>
          <td class="script-name">
            <a class="script-name" href="http://<%=pages[i].server_name%><%=pages[i].script_name%>" title="<%=pages[i].script_name%>"><%=pages[i].script_name%></a>
            <% for (k in pages[i].tags) { %>
                <div class="muted"><small><%=k%> = <%=pages[i].tags[k]%></small></div>
            <% } %>
            <% if (pages[i].timers_cnt > 0) { %>
                <div>
                    <a href="<%=timersPath.replace('00000', pages[i].id)%>"><small><i class="icon-time"></i> timers details</small></a>
                </div>
            <% } %>
          </td>
          <td><div class="text-right"><%=pages[i].req_time_format%></div></td>
          <td><div class="text-right"><%=pages[i].status%></div></td>
          <td><div class="text-right"><%=pages[i].mem_peak_usage_format%></div></td>
          <td><div class="text-right"><%=pages[i].ru_utime%></div></td>
          <td><div class="text-right">-</div></td>
        </tr>
        <% } %>
    </script>
    <script type="text/javascript">
        var liveStatus = true,
            limit = {{ limit }},
            frequency = {{ frequency * 1000 }},
            timersPath = '{{ path('timers_show', { type: 'live', requestId: '00000' }) }}',
            updating = false,
            timerHandler;

        $('#filter-form input[name=last_id]').val({{ last_id }});
        $('#filter-form input[name=last_timestamp]').val({{ last_timestamp }});

        $(function() {
            if (liveStatus) {
                timerHandler = setTimeout(updateLiveList, frequency);
            }
        });

        updateLiveList = function() {
            if (updating) {
                return;
            }

            updating = true;

            $.ajax({
                url: "{{ path('server_live', { serverName: server_name, hostName: hostname }) }}",
                method: 'post',
                data: $('#filter-form').serialize(),
                success: function(data){
                    if (typeof data.pages !== undefined && data.pages.length > 0) {
                        var resHtml = tmpl("row_tpl", { pages: data.pages, timersPath: timersPath });
                        $('#table-header').after(resHtml);
                        $('#table-data tr:hidden').fadeIn();

                        $('#table-data tr').each(function(index) {
                            if (index >= limit) {
                                $(this).remove();
                            }
                        });

                        for (var i = data.pages.length - 1; i >= 0; i--) {
                            if (rtChartData.length >= limit)
                                rtChartData.shift();
                            rtChartData.push({
                                page: data.pages[i].script_name,
                                value: data.pages[i].req_time
                            });
                            if (muChartData.length >= limit)
                                muChartData.shift();
                            muChartData.push({
                                page: data.pages[i].script_name,
                                value: data.pages[i].mem_peak_usage
                            });
                            if (cpuChartData.length >= limit)
                                cpuChartData.shift();
                            cpuChartData.push({
                                page: data.pages[i].script_name,
                                value: data.pages[i].ru_utime
                            });
                        }
                        rtChart.validateData();
                        muChart.validateData();
                        cpuChart.validateData();

                        $('#filter-form input[name=last_id]').val(data.pages[0].id);
                        $('#filter-form input[name=last_timestamp]').val(data.pages[0].timestamp);
                    }

                    updating = false;

                    if (liveStatus) {
                        timerHandler = setTimeout(updateLiveList, frequency);
                    }
                },
                dataType: "json"
            });
        };

        $('.live-controls .icon-pause').click(function() {
            liveStatus = false;
            clearTimeout(timerHandler);

            $('.live-controls .icon-pause').addClass('disabled');
            $('.live-controls .icon-play').removeClass('disabled');

            return false;
        });

        $('.live-controls .icon-play').click(function() {
            if (liveStatus)
                return false;

            liveStatus = true;
            if (!updating) {
                updateLiveList();
            }
            $('.live-controls .icon-pause').removeClass('disabled');
            $('.live-controls .icon-play').addClass('disabled');

            return false;
        });

        $('.live-controls button.filter').click(function() {
            if ($('.lead').is(':visible')) {
                $('.filter-form').show();
                $('.lead').hide();
            }
            else {
                $('.filter-form').hide();
                $('.lead').show();
            }
        });
    </script>
{% endblock %}
